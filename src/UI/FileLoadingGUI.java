/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Business.GlobalStats;
import Business.Hipermercado;
import Utils.Compra;
import Utils.Crono;
import Utils.MalformedCompraException;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Pedro Cunha
 */
public class FileLoadingGUI extends javax.swing.JFrame {

    private Hipermercado current;
    private Hipermercado newHip;
    private int linhasCompras, linhasClientes, linhasProdutos;
    private ArrayList<Compra> comprasInvalidas;
    private int comprasValor0;
    private GlobalStats estatisticas;
    private GlobalStats oldStats;

    /**
     * Creates new form FileLoadingGUI
     *
     * @param current
     */
    public FileLoadingGUI(Hipermercado current,GlobalStats oldStats) {
        initComponents();
        this.newHip = new Hipermercado();
        this.current = current;
        this.linhasClientes = this.linhasCompras = this.linhasProdutos = comprasValor0 = 0;
        this.comprasInvalidas = new ArrayList<>();
        this.oldStats=oldStats;
        this.estatisticas=new GlobalStats();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Carregamento de Dados");

        jTextField1.setText("FichClientes.txt");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setText("FichProdutos.txt");

        jTextField3.setText("Compras.txt");

        jLabel1.setText("Ficheiro de Clientes:");

        jLabel2.setText("Ficheiro de Produtos:");

        jLabel3.setText("Ficheiro de Compras");

        jToggleButton1.setText("Clique para mudar para carregamento a partir de ficheiro de objectos");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton1.setText("Carregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sair");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Carregamento a partir de Ficheiros de Texto");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jToggleButton1)
                .addContainerGap(104, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(36, 36, 36)
                .addComponent(jToggleButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        if (jToggleButton1.isSelected()) {
            jLabel2.setVisible(false);
            jLabel3.setVisible(false);
            jTextField2.setVisible(false);
            jTextField3.setVisible(false);
            jLabel1.setText("Ficheiro de Objectos:");
            jTextField1.setText("hipermercado.obj");
            jLabel4.setText("Carregamento a partir de Ficheiro de Objectos");
            jToggleButton1.setText("Clique para mudar para carregamento a partir de ficheiros de texto");
        } else {
            jLabel2.setVisible(true);
            jLabel3.setVisible(true);
            jTextField2.setVisible(true);
            jTextField3.setVisible(true);
            jLabel1.setText("Ficheiro de Clientes:");
            jTextField1.setText("FichClientes.txt");
            jLabel4.setText("Carregamento a partir de Ficheiros de Texto");
            jToggleButton1.setText("Clique para mudar para carregamento a partir de ficheiro de objectos");
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String cli,prod,comp;
        if(jToggleButton1.isSelected()){
            cli=jTextField1.getText();
            this.CarregaObjecto(cli);
            new MainFrameGUI(this.newHip,this.estatisticas).setVisible(true);
            this.dispose();
        }
        else{
        cli=jTextField1.getText();
        prod=jTextField2.getText();
        comp=jTextField3.getText();
        this.LeituraFicheiros(cli, prod, comp);
        new MainFrameGUI(this.newHip,this.estatisticas).setVisible(true);
        this.dispose();
                }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new MainFrameGUI(this.current, oldStats).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileLoadingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileLoadingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileLoadingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileLoadingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileLoadingGUI(new Hipermercado(),new GlobalStats()).setVisible(true);
            }
        });
    }

    /**
     * Método de Leitura de um ficheiro de Clientes
     *
     * @param filename Nome do Ficheiro
     * @throws IOException Caso o ficheiro especificado não exista
     */
    public void leFicheiroClientes(String filename) throws IOException {
        this.linhasClientes = 0;
        String linha;
        BufferedReader fichReader = new BufferedReader(new FileReader(filename));
        while ((linha = fichReader.readLine()) != null) {
            this.newHip.insertCliente(linha);
            this.linhasClientes++;
        }

    }

    /**
     * Método de Leitura de um ficheiro de Produtos
     *
     * @param filename Nome do Ficheiro
     * @throws IOException Caso o ficheiro especificado não exista
     */
    public void leFicheiroProdutos(String filename) throws IOException {
        this.linhasProdutos = 0;
        String linha;
        BufferedReader fichReader = new BufferedReader(new FileReader(filename));
        while ((linha = fichReader.readLine()) != null) {
            this.newHip.insertProduto(linha);
            this.linhasProdutos++;
        }
    }

    /**
     * Método de Leitura de um ficheiro de Compras
     *
     * @param filename Nome do Ficheiro
     * @throws IOException Caso o ficheiro especificado não exista
     * @throws MalformedCompraException Caso hajam linhas malformadas
     */
    public void leFicheiroCompras(String filename) throws IOException, MalformedCompraException {
        String st;
        Compra c;
        this.comprasValor0 = 0;
        this.linhasCompras = 0;
        this.comprasInvalidas = new ArrayList<>();
        String linha;
        BufferedReader fichReader = new BufferedReader(new FileReader(filename));
        while ((linha = fichReader.readLine()) != null) {

            c = Compra.parseCompra(linha);
            if (this.newHip.compraValida(c)) {
                this.newHip.registerSale(c);
            } else {
                this.comprasInvalidas.add(c.clone());
            }
            if (c.getValorUni() == 0) {
                this.comprasValor0++;
            }
            this.linhasCompras++;
        }
    }

    
    public void LeituraFicheiros(String fileCli, String fileProd, String fileComp) {

        double tempoDecorrido;
        try {
            this.newHip = new Hipermercado();
            
            Crono.start();
            this.leFicheiroClientes(fileCli);
            tempoDecorrido = Crono.stop();
            FileLoadingGUI.infoBox("Leitura de " + this.linhasClientes + " linhas concluída em " + tempoDecorrido + " segundos", "Carregamento Concluido");
            Crono.start();
            this.leFicheiroProdutos(fileProd);
            tempoDecorrido = Crono.stop();
            FileLoadingGUI.infoBox("Leitura de " + this.linhasProdutos + " linhas concluída em " + tempoDecorrido + " segundos", "Carregamento Concluido");   
            Crono.start();
            this.leFicheiroCompras(fileComp);
            tempoDecorrido = Crono.stop();
            FileLoadingGUI.infoBox("Leitura de " + this.linhasCompras + " linhas concluída em " + tempoDecorrido + " segundos","Carregamento Concluido");
            Crono.start();
            this.estatisticas = new GlobalStats(fileComp, fileProd, fileCli, this.linhasProdutos, this.linhasProdutos - this.newHip.getProdutosNuncaComprados().size(), this.newHip.getProdutosNuncaComprados().size(), this.linhasClientes, this.linhasClientes - this.newHip.getClientesNaoCompradores().size(), this.newHip.getClientesNaoCompradores().size(), comprasValor0, linhasCompras - this.comprasInvalidas.size(), this.newHip.comprasMensais(), this.newHip.faturacaoMensal(), this.newHip.getCompradoresMensal(), this.comprasInvalidas, this.comprasInvalidas.size());
            tempoDecorrido = Crono.stop();
            FileLoadingGUI.infoBox("Estatísticas criadas em " + tempoDecorrido + " segundos","Estatísticas Criadas");
        } catch (IOException e) {
            FileLoadingGUI.infoBox("Ficheiro Não Encontrado","ERROR");
        } catch (MalformedCompraException mfe) {
            FileLoadingGUI.infoBox("Compra malformada","ERROR");
        }
    }

    /**
     * Gravação em Ficheiro de Objectos
     */
    public void GuardaObjecto() {
        double tempoDecorrido;
        try {
      
            Crono.start();
            this.newHip.toObjFile("hipermercado.obj");
            tempoDecorrido = Crono.stop();
            FileLoadingGUI.infoBox("Gravação efectuada em " + tempoDecorrido + " segundos","ERROR");
        } catch (IOException ioe) {
            FileLoadingGUI.infoBox("Erro no disco: " + ioe.getMessage(),"ERROR");
        }
    }


    public void CarregaObjecto(String objFilename) {
        double tempoDecorrido;
        try {

            Crono.start();
            this.newHip = Hipermercado.readFromObjFile(objFilename);
            tempoDecorrido = Crono.stop();
            FileLoadingGUI.infoBox("Carregamento efectuado em " + tempoDecorrido + " segundos","Carregamento Concluido");
            Crono.start();
            this.estatisticas.setEstatEstruturas(this.newHip.comprasMensais(), this.newHip.faturacaoMensal(), this.newHip.getCompradoresMensal(), this.comprasInvalidas, this.comprasInvalidas.size());
            tempoDecorrido = Crono.stop();
            FileLoadingGUI.infoBox("Estatísticas atualizadas em " + tempoDecorrido + " segundos","Estatísticas atualizadas");
        } catch (IOException ioe) {
            FileLoadingGUI.infoBox("Erro no ficheiro: " + ioe.getMessage(),"ERROR");
        } catch (ClassNotFoundException cnf) {
            FileLoadingGUI.infoBox("Objecto não compatível: " + cnf.getMessage(),"ERROR");
        }
    }
    
    public static void infoBox(String infoMessage, String titleBar) {
        JOptionPane.showMessageDialog(null, infoMessage, "" + titleBar, JOptionPane.INFORMATION_MESSAGE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
